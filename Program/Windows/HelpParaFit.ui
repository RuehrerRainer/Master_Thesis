<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Dialog</class>
 <widget class="QDialog" name="Dialog">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>727</width>
    <height>472</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Help - Parameter Fitting</string>
  </property>
  <property name="windowIcon">
   <iconset>
    <normaloff>../Graphics/AD2.ico</normaloff>../Graphics/AD2.ico</iconset>
  </property>
  <widget class="QTabWidget" name="tabWidget">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>10</y>
     <width>700</width>
     <height>441</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">font-weight: 900; color: black;
font: 75 9pt &quot;Segoe UI Semibold&quot;;</string>
   </property>
   <property name="currentIndex">
    <number>0</number>
   </property>
   <widget class="QWidget" name="tab">
    <attribute name="title">
     <string>Nelder-Mead Algorithm</string>
    </attribute>
    <widget class="QLabel" name="label">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>400</width>
       <height>25</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>75</weight>
       <italic>false</italic>
       <bold>true</bold>
      </font>
     </property>
     <property name="styleSheet">
      <string notr="true">font-weight: bold; color: black;
</string>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;Parameter Determination - &lt;/span&gt;&lt;span style=&quot; font-size:12pt; font-style:italic;&quot;&gt;Nelder-Mead-&lt;/span&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;Algorithm&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_2">
     <property name="geometry">
      <rect>
       <x>15</x>
       <y>30</y>
       <width>670</width>
       <height>111</height>
      </rect>
     </property>
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>9</weight>
       <italic>false</italic>
       <bold>false</bold>
      </font>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;justify&quot;&gt;For the determination of the three unknown parameters of the crystallization model, the iterative &lt;span style=&quot; font-style:italic;&quot;&gt;Nelder-Mead &lt;/span&gt;algorithm is employed. This algorithm is comparable to conventional simplex algorithms with the difference, that it uses an adaptive simplex size. Over the course of the algorithm, various steps can be employed. These include &lt;span style=&quot; font-weight:600;&quot;&gt;reflection, expansion, contraction &lt;/span&gt;and &lt;span style=&quot; font-weight:600;&quot;&gt;shrinking &lt;/span&gt;of the current simplex as indicated by following image.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="wordWrap">
      <bool>true</bool>
     </property>
    </widget>
    <widget class="QLabel" name="label_6">
     <property name="geometry">
      <rect>
       <x>175</x>
       <y>140</y>
       <width>421</width>
       <height>171</height>
      </rect>
     </property>
     <property name="text">
      <string/>
     </property>
     <property name="pixmap">
      <pixmap>../Graphics/NelderMead2.svg</pixmap>
     </property>
     <property name="scaledContents">
      <bool>true</bool>
     </property>
    </widget>
    <widget class="QLabel" name="label_8">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>290</y>
       <width>670</width>
       <height>111</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>9</weight>
       <italic>false</italic>
       <bold>false</bold>
      </font>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;References:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;J. A. Nelder, R. Mead, The Computer Journal 1965, 7 (4), 308 – 313. DOI: &lt;/span&gt;&lt;a href=&quot;https://doi.org/10.1093/comjnl/7.4.308&quot;&gt;&lt;span style=&quot; font-size:9pt; text-decoration: underline; color:#0000ff;&quot;&gt;https://doi.org/10.1093/comjnl/7.4.308&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="wordWrap">
      <bool>true</bool>
     </property>
    </widget>
   </widget>
   <widget class="QWidget" name="tab_2">
    <attribute name="title">
     <string>Particle Swarm Optimization</string>
    </attribute>
    <widget class="QLabel" name="label_3">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>450</width>
       <height>25</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>75</weight>
       <italic>false</italic>
       <bold>true</bold>
      </font>
     </property>
     <property name="styleSheet">
      <string notr="true">font-weight: bold; color: black;
</string>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;Parameter Determination - &lt;/span&gt;&lt;span style=&quot; font-size:12pt; font-style:italic;&quot;&gt;Particle Swarm Optimization&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_4">
     <property name="geometry">
      <rect>
       <x>15</x>
       <y>30</y>
       <width>670</width>
       <height>161</height>
      </rect>
     </property>
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>9</weight>
       <italic>false</italic>
       <bold>false</bold>
      </font>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;justify&quot;&gt;The second available algorithm for the determination of unknown parameters is &lt;span style=&quot; font-style:italic;&quot;&gt;Particle Swarm Optimization&lt;/span&gt;. This algorithm is one of the most well known metaheuristics in optimization theory. To start the algorithm, an initial swarm of &lt;span style=&quot; font-style:italic;&quot;&gt;i&lt;/span&gt; points (particles) is initialized in the parameter space. For each particle the value of the objective function is calculated and stored in a vector (denoted as &lt;span style=&quot; font-style:italic;&quot;&gt;pbest&lt;/span&gt;). From this vector - additionally - the current global optimum (denoted as &lt;span style=&quot; font-style:italic;&quot;&gt;gbest&lt;/span&gt;) is determined.&lt;/p&gt;&lt;p align=&quot;justify&quot;&gt;With a new iteration step, the position of each particle is updated by addition with a velocity vector. This velocity vector is composed of different terms that are commonly denoted &lt;span style=&quot; font-style:italic;&quot;&gt;momentum&lt;/span&gt;, &lt;span style=&quot; font-style:italic;&quot;&gt;cognitive&lt;/span&gt; and &lt;span style=&quot; font-style:italic;&quot;&gt;social&lt;/span&gt; terms. Like all metaheuristic algorithms, PSO is not guaranteed to converge to a global minimum. However, function minima are often found in an efficient manner over the course of a small number of generations.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="wordWrap">
      <bool>true</bool>
     </property>
    </widget>
    <widget class="QLabel" name="label_5">
     <property name="geometry">
      <rect>
       <x>100</x>
       <y>174</y>
       <width>500</width>
       <height>131</height>
      </rect>
     </property>
     <property name="text">
      <string/>
     </property>
     <property name="pixmap">
      <pixmap>../Graphics/ParticleSwarm.svg</pixmap>
     </property>
    </widget>
    <widget class="QLabel" name="label_9">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>290</y>
       <width>670</width>
       <height>111</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>9</weight>
       <italic>false</italic>
       <bold>false</bold>
      </font>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;References:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;J. Kennedy, R. Eberhart, in Proceedings of ICNN'95 - International Conference on Neural Networks, IEEE 1995.&lt;/p&gt;&lt;p&gt;Handbook of Metaheuristics, 3rd ed., International Series in Operations Research &amp;amp; Management Science, Vol. 272 (Eds: M. Gendreau, J.-Y. Potvin), Springer International Publishing; Imprint: Springer, Cham 2019.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="wordWrap">
      <bool>true</bool>
     </property>
    </widget>
   </widget>
   <widget class="QWidget" name="tab_3">
    <attribute name="title">
     <string>Remarks</string>
    </attribute>
    <widget class="QLabel" name="label_7">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>450</width>
       <height>25</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>75</weight>
       <italic>false</italic>
       <bold>true</bold>
      </font>
     </property>
     <property name="styleSheet">
      <string notr="true">font-weight: bold; color: black;
</string>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;Remarks on the fitting algorithms&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_10">
     <property name="geometry">
      <rect>
       <x>15</x>
       <y>30</y>
       <width>670</width>
       <height>251</height>
      </rect>
     </property>
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="font">
      <font>
       <family>Segoe UI Semibold</family>
       <pointsize>9</pointsize>
       <weight>9</weight>
       <italic>false</italic>
       <bold>false</bold>
      </font>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;justify&quot;&gt;While both algorithms offer a way to fit experimental data, both algorithms have their respective advantages and drawbacks. Particle Swarm Optimization for instance can tend to be unstable for the exponential growth rate approach. Certain combinations (of exponential parameters 1&amp;amp;2) are so computationally demanding that the computation time in DWSIM of 360 s can be exceeded. In PSO this is particularly challenging since a high number of simulations is performed in an area where no constraints have been put on parameter combinations.&lt;/p&gt;&lt;p align=&quot;justify&quot;&gt;On the other hand, PSO is capable of searching the input space more efficiently than the Nelder-Mead algorithm. While the Nelder Mead algorithm tends to be stable, a higher emphasis put on exploitation of areas of low objective functions. This holds true especially in later iterations where the simplex has been contracted multiple times. Especially in the first couple of iterations, PSO puts more emphasis on exploring the input space in order to find a suitable solution.&lt;/p&gt;&lt;p align=&quot;justify&quot;&gt;It is recommended to use PSO especially when the BCF growth rate approach is used which tends to be stable calculation-wise.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="wordWrap">
      <bool>true</bool>
     </property>
    </widget>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
